<?xml version='1.0' encoding='utf8'?>
<!--
	Profile: The Gambler (23064)
	Authors: miss-aoi
-->
<!DOCTYPE Profile [
	<!-- Adjust to desired amount -->
	<!ENTITY The_Gambler "1">
]>
<Profile>
	<Name>The Gambler</Name>
	<BehaviorDirectory />
	<Order>
		<Log Message="Starting Fishing: The Gambler..." />
		<If condition="not HasAtLeast(20676,50)">
			<!--Blue Bobbit-->
			<Lisbeth IgnoreHome="True" Json="[{'Group':1,'Item':20676,'Amount':50,'Enabled':true,'Type':'Exchange'}]" />
		</If>
		<If condition="not IsOnSubMap(1899)">
			<LisbethTravel Area="Kugane" XYZ="39.04472, 4.685791, -32.06384" />
			<RunCode Name="Shirogane"/>
			<LisbethTravel Area="Shirogane" XYZ="-114.2855, 2.02, 147.0289"/>
		</If>
		<If condition="not ClassName == ClassJobType.Fisher">
			<ChangeClass Job="Fisher" />
		</If>
		<ExFish Bait="Blue Bobbit" condition="not HasAtLeast(23064,&The_Gambler;) and HasAtLeast(20676,1)" MinFish="15" MaxFish="25" ShuffleFishSpots="True" ThaliaksFavor="True" CordialType="Auto" Sit="True" Chum="True">
			<FishSpots>
				<FishSpot XYZ="-125.8832, 2.019961, 161.1932" Heading="5.460682" />
				<FishSpot XYZ="-112.8347, 0.6, 161.7038" Heading="1.158793" />
				<FishSpot XYZ="-111.3883, 0.5999999, 174.3742" Heading="0.126256" />
			</FishSpots>
			<Keepers>
				<Keeper name="The Gambler" />
			</Keepers>
			<SurfaceSlaps />
		</ExFish>
		<LLoadProfile Path="../../Start.xml" />
	</Order>
	<GrindAreas />
	<CodeChunks>
		<CodeChunk Name="Shirogane">
			<![CDATA[ 
				var unit = GameObjectManager.GetObjectByNPCId(111);
				unit.Target();
				unit.Interact();
				await Coroutine.Sleep(1000);
				await Coroutine.Wait(5000, () => SelectString.IsOpen);
				await Coroutine.Sleep(500);
				if (SelectString.IsOpen)
					SelectString.ClickSlot(1);
				await Coroutine.Sleep(500);
				await Coroutine.Wait(5000, () => SelectString.IsOpen);
				await Coroutine.Sleep(500);
				if (SelectString.IsOpen)
					SelectString.ClickSlot(2);
				await Coroutine.Wait(5000, () => RaptureAtkUnitManager.GetWindowByName("HousingSelectBlock") != null);

				if (RaptureAtkUnitManager.GetWindowByName("HousingSelectBlock") != null)
				{
					RaptureAtkUnitManager.GetWindowByName("HousingSelectBlock").SendAction(1, 3, 0);
					await Coroutine.Wait(5000, () => SelectYesno.IsOpen);
					if (SelectYesno.IsOpen)
						SelectYesno.Yes();
					await Coroutine.Sleep(5000);
					if (CommonBehaviors.IsLoading)
						await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
				}
			]]>
		</CodeChunk>
	</CodeChunks>
</Profile>