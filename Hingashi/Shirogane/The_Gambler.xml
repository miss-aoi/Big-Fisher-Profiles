<?xml version='1.0' encoding='utf8'?>
<!--
	Profile: The Gambler (23064)
	Authors: miss-aoi
-->
<!DOCTYPE Profile [
	<!-- Adjust to desired amount -->
	<!ENTITY The_Gambler "1">

	<!-- DO NOT CHANGE -->
	<!ENTITY TIME_WINDOW  "True">
	<!ENTITY WEATHER_PAST "True">
	<!ENTITY WEATHER_NOW  "True">
]>
<Profile>
	<Name>The Gambler</Name>
	<BehaviorDirectory />
	<Order>
		<Log Message="Starting Fishing: The Gambler..." />
		<If Condition="not IsOnMap(641)">
			<RunCode Name="AnglersArtToGP"/>
		</If>
		<If condition="not HasAtLeast(20676,50)">
			<!--Blue Bobbit-->
			<Log Message="Farming more Blue Bobbit with Lisbeth." />
			<Lisbeth IgnoreHome="True" Json="[{'Group':1,'Item':20676,'Amount':50,'Enabled':true,'Type':'Exchange'}]" />
			<LLoadProfile Path="../../Start.xml" />
		</If>
		<If condition="not IsOnSubMap(1899)">
			<LisbethTravel Area="Kugane" XYZ="39.04472, 4.685791, -32.06384" />
			<RunCode Name="Shirogane"/>
			<LisbethTravel Area="Shirogane" XYZ="-119.0833, 2.02, 154.4393" />
		</If>
		<If condition="not ClassName == ClassJobType.Fisher">
			<ChangeClass Job="Fisher" />
		</If>
		<ExFish Bait="Blue Bobbit" condition="not HasAtLeast(23064,&The_Gambler;) and HasAtLeast(20676,1) and &TIME_WINDOW; and &WEATHER_PAST; and &WEATHER_NOW;"
				MinFish="15" MaxFish="25" ShuffleFishSpots="True" ThaliaksFavor="True" CordialType="Auto" KeepNone="True" Sit="True" SitRate="1" Chum="True">
			<FishSpots>
				<FishSpot XYZ="-125.8832, 2.019961, 161.1932" Heading="5.460682" />
				<FishSpot XYZ="-112.8347, 0.6, 161.7038" Heading="1.158793" />
				<FishSpot XYZ="-111.3883, 0.5999999, 174.3742" Heading="0.126256" />
			</FishSpots>
			<Keepers>
				<Keeper name="The Gambler" />
			</Keepers>
			<SurfaceSlaps />
		</ExFish>
		<LLoadProfile Path="../../Start.xml" />
	</Order>
	<GrindAreas />
	<CodeChunks>
		<CodeChunk Name="Shirogane">
			<![CDATA[ 
				var unit = GameObjectManager.GetObjectByNPCId(111);
				unit.Target();
				unit.Interact();
				await Coroutine.Sleep(1000);
				await Coroutine.Wait(5000, () => SelectString.IsOpen);
				await Coroutine.Sleep(500);
				if (SelectString.IsOpen)
					SelectString.ClickSlot(1);
				await Coroutine.Sleep(500);
				await Coroutine.Wait(5000, () => SelectString.IsOpen);
				await Coroutine.Sleep(500);
				if (SelectString.IsOpen)
					SelectString.ClickSlot(2);
				await Coroutine.Wait(5000, () => RaptureAtkUnitManager.GetWindowByName("HousingSelectBlock") != null);

				if (RaptureAtkUnitManager.GetWindowByName("HousingSelectBlock") != null)
				{
					RaptureAtkUnitManager.GetWindowByName("HousingSelectBlock").SendAction(1, 3, 0);
					await Coroutine.Wait(5000, () => SelectYesno.IsOpen);
					if (SelectYesno.IsOpen)
						SelectYesno.Yes();
					await Coroutine.Sleep(5000);
					if (CommonBehaviors.IsLoading)
						await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
				}
			]]>
		</CodeChunk>
		<CodeChunk Name="AnglersArtToGP">
			<![CDATA[
				while (Core.Player.Auras.GetAuraStacksById(2778) >= 3)
				{
					await Coroutine.Sleep(500);
					ff14bot.Managers.ActionManager.DoAction(26804, Core.Player);
					await Coroutine.Sleep(1000);
				}
			]]>
		</CodeChunk>
	</CodeChunks>
</Profile>