<?xml version='1.0' encoding='utf8'?>
<!--
	Profile: Spearnose (7919)
	Authors: miss-aoi
-->
<!DOCTYPE Profile [
	<!-- Adjust to desired amount -->
	<!ENTITY Spearnose "5">
]>
<Profile>
	<Name>Spearnose</Name>
	<BehaviorDirectory />
	<Order>
		<Log Message="Starting Fishing: Spearnose..." />
		<If condition="not HasAtLeast(2607,50)">
			<!--Caddisfly Larva-->
			<Lisbeth IgnoreHome="True" Json="[{'Group':1,'Item':2607,'Amount':50,'Enabled':true,'Type':'Purchase'}]" />
		</If>
		<If condition="not IsOnSubMap(0)">
			<LisbethTravel Area="Ul'dah (Steps of Nald)" XYZ="-147.512, -3.154888, -166.1085" />
			<RunCode Name="TheGoblet"/>
			<LisbethTravel Area="The Goblet" XYZ="-10.33781, -24, 64.53981"/>
		</If>
		<If condition="not ClassName == ClassJobType.Fisher">
			<ChangeClass Job="Fisher" />
		</If>
		<While condition="IsTimeBetween(20,21)">
			<Log Message="Waiting for window to open..." />
			<WaitTimer WaitTime="30" />
		</While>
		<ExFish Bait="Caddisfly Larva" condition="not HasAtLeast(7919,&Spearnose;) and HasAtLeast(2607,1) and IsTimeBetween(21,24) and ExBuddy.Helpers.SkywatcherPlugin.IsWeatherInZone(341, 'Clouds', 'Fog')" MinFish="15" MaxFish="25" ShuffleFishSpots="True" ThaliaksFavor="True" CordialType="HiCordial" Sit="True" Chum="True">
			<FishSpots>
				<FishSpot XYZ="-13.18043, -24.07133, 41.33421" Heading="4.868697" />
				<FishSpot XYZ="-13.18544, -24.07133, 58.71743" Heading="4.491707" />
				<FishSpot XYZ="-13.19689, -24.07133, 22.75558" Heading="5.258256" />
			</FishSpots>
			<Keepers>
				<Keeper name="Spearnose" />
			</Keepers>
			<SurfaceSlaps />
		</ExFish>
		<LLoadProfile Path="../../Start.xml" />
	</Order>
	<GrindAreas />
	<CodeChunks>
		<CodeChunk Name="TheGoblet">
			<![CDATA[
				var unit = GameObjectManager.GetObjectByNPCId(9);
				unit.Target();
				unit.Interact();
				await Coroutine.Sleep(1000);
				await Coroutine.Wait(5000, () => SelectString.IsOpen);
				await Coroutine.Sleep(500);
				if (SelectString.IsOpen)
					SelectString.ClickSlot(1);
				await Coroutine.Sleep(500);
				await Coroutine.Wait(5000, () => SelectString.IsOpen);
				await Coroutine.Sleep(500);
				if (SelectString.IsOpen)
					SelectString.ClickSlot(2);
				await Coroutine.Wait(5000, () => RaptureAtkUnitManager.GetWindowByName("HousingSelectBlock") != null);

				if (RaptureAtkUnitManager.GetWindowByName("HousingSelectBlock") != null)
				{
					RaptureAtkUnitManager.GetWindowByName("HousingSelectBlock").SendAction(1, 3, 0);
					await Coroutine.Wait(5000, () => SelectYesno.IsOpen);
					if (SelectYesno.IsOpen)
						SelectYesno.Yes();
					await Coroutine.Sleep(5000);
					if (CommonBehaviors.IsLoading)
						await Coroutine.Wait(-1, () => !CommonBehaviors.IsLoading);
				}
			]]>
		</CodeChunk>
	</CodeChunks>
</Profile>